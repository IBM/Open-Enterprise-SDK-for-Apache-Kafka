# Specifies the type of the schema that you would like to use with your Kafka application.
# Currently, the supported values are avro and json This attribute is optional and has a value of
# avro if not specified
# Modify this to json if you are using a JSON schema
schemaType=avro

# Specifies the location of the Avro or JSON schema file.
# Modify this to point to your schema file
schemaFile=./employee-schema.avsc

# Specifies the directory where the generated copybooks or code snippets will be stored. This
# directory must exist.
# Modify this to point to the directory you wish to generate files to
artifactsLocation=./COBOL

# Specifies the directory where the log generated from the data transformation utility will be
# stored. This directory must exist.
# Modify this to point to the directory you wish to generate logs to
logFileDirectory=./log

# Specifies the language for the artifact generation. Currently the only supported value is COBOL.
language=COBOL

# Specifies whether to generate additional modules to invoke the data transformation snippets.
# These modules can be called from a 64-bit COBOL application. Without these modules, the generated
# snippets can only be directly used from a 31-bit COBOL application. The supported values are "on"
# and "off". If set to "on", the modules "IXYCP2JS.cbl" and "IXYJS2CP.cbl" are generated. If set to
# "off", these are not generated.
# Modify this if required
amode64=on

# Specifies the default length for an alphanumeric data type in the generated copybook. In the case
# of a JSON schema, this value can be overriden for a specific string-type field using the
# "maxLength" keyword.
# Modify this if required
stringMax=255

# Specifies the default maximum value of an integer-type field. This is used to determine the size
# of a numeric data type in the generated copybook. In the case of a JSON schema, this value can
# be overriden for a specific integer-type field using the "maximum" keyword.
# e.g. in order to store a 32-bit signed integer (PIC 9(9) COMP-5), it can be set to 2147483647 (2^31 - 1).
# Modify this if required
integerMax=2147483647

# Specifies the default minimum value of an integer-type field. This is used to determine the size
# of a numeric data type in the generated copybook. In the case of a JSON schema, this value can
# be overriden for a specific integer-type field using the "minimum" keyword.
# e.g. in order to store a 32-bit signed integer (PIC 9(9) COMP-5), it can be set to -2147483648 (-2^31).
# Modify this if required
integerMin=-2147483648

# Specifies the maximum number of elements that can be present in a COBOL table/array (using the
# OCCURS clause) in the generated copybook. In the case of a JSON schema, this value can be
# overriden for a specific array-type field using the "maxItems" keyword.
# Modify this if required
arrayMaxItems=10

# Specifies the number of digits allocated to the integer (whole number) portion of a decimal data
# type in the generated COBOL copybook. This determines how many digits appear before the decimal
# point.
# Modify this if required
numberNonFractionalDigits=9


# Specifies the number of digits allocated to the decimal (fractional) portion of a decimal data
# type in the generated COBOL copybook. This determines how many digits appear after the decimal
# point.
# Modify this if required
numberFractionalDigits=2